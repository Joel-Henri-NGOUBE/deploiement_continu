# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      # - name: build de l'image docker 
      #   run: docker image build -t ghcr.io/joel-henri-ngoube/deploiement-continu/mon-slogan:${{ github.sha }} .

      - name: build de l'image docker 
        run: | 
          docker image build -t ghcr.io/joel-henri-ngoube/deploiement-continu/mon-slogan:${{ github.sha }} .
          docker login ghcr.io -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker image push ghcr.io/joel-henri-ngoube/deploiement-continu/mon-slogan:${{ github.sha }}

      - name: Deploiement sur la VM chez Scaleway
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker login ghcr.io -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ghcr.io/joel-henri-ngoube/deploiement-continu/mon-slogan:${{ github.sha }}
            docker container stop mon-slogan && docker container rm mon-slogan || echo "Aucun conteneur Ã  stopper"
            docker container run -d --network web \
              --name mon-slogan \
              --label "traefik.http.routers.mon-slogan.rule=Host(\`mon-slogan.etudiant18.floless.fr\`)" \
              --label "traefik.http.routers.mon-slogan.tls=true" \
              --label "traefik.http.routers.mon-slogan.tls.certresolver=letsencrypt" \
              --label "traefik.enable=true" \
              --label "traefik.docker.network=web" \
              ghcr.io/joel-henri-ngoube/deploiement-continu/mon-slogan:${{ github.sha }}
